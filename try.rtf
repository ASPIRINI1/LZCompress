{\rtf1\ansi\ansicpg1251\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;\f2\fswiss\fcharset0 Helvetica;
\f3\fswiss\fcharset0 Helvetica-Oblique;}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue0;
\red255\green255\blue255;\red155\green35\blue147;\red15\green104\blue160;\red57\green0\blue160;\red28\green0\blue207;
\red93\green108\blue121;\red196\green26\blue22;\red108\green54\blue169;\red74\green85\blue96;}
{\*\expandedcolortbl;;\cssrgb\c100000\c100000\c99985;\cssrgb\c0\c1\c1;\csgenericrgb\c0\c0\c0\c85000;
\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c60759\c13753\c57628;\csgenericrgb\c5882\c40784\c62745;\csgenericrgb\c22454\c0\c62803;\csgenericrgb\c11000\c0\c81000;
\csgenericrgb\c36526\c42188\c47515;\csgenericrgb\c77000\c10200\c8600;\csgenericrgb\c42190\c21278\c66379;\csgenericrgb\c29020\c33333\c37647;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab593
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3         
\f1\b var
\f0\b0  n = 60\
        
\f1\b var
\f0\b0  w = 20 // Nall - nCoded\
        \
        
\f1\b var
\f0\b0  maxWBufCount = 6\
        
\f1\b var
\f0\b0  maxDictCount = 12\
        \
        \
        
\f1\b var
\f0\b0  dictionary: [Character] = [" "]\
        \
        
\f1\b var
\f0\b0  wBuf: [Character] = [" "]\
        \
//        dictionary.removeAll()\
        wBuf.removeAll()\
        dictionary[0] = text[0]\
        \
        // fill Wbufer\
        
\f1\b for
\f0\b0  i 
\f1\b in
\f0\b0  1...maxWBufCount \{\
            wBuf.append(text[i])\
        \}\
        \
//        dictionary.append(text[0])\
        \
//        var dloop = 0\
//        var wloop = 0\
//        var tloop = 0\
//\
//\
//        var offset = 0\
//        var matchlength = 0\
        \
        //
\f1\b MARK: - 1 TRY
\f0\b0 \
        \
        /*for var index in (maxWBufCount+1)...text.count-1\{\
\
            var wChr = 0\
            var dChr = 0\
            offset = 0\
            matchlength = 0\
            \
            \
            // equals char from dictionary and chars from wBuf\
            while wChr <= wBuf.count-1\{\
                \
                //search in dictionary\
                while dChr <= dictionary.count-1\{\
                \
                    if wBuf.count > 0 \{\
                        \
                        // search equals charecters, it count & position in text where neet put ref\
                        if wBuf[wChr] == dictionary[dChr] && wChr < wBuf.count-1\{\
                            offset = index - wBuf.count\
                            matchlength += 1\
                            wChr += 1\
                            dChr += 1\
                        \}\
                        \
                        // non equals char or wBuf fully checked\
                        if wBuf[wChr] != dictionary[dChr] || wChr == wBuf.count-1\{\
                            \
                            //add equals characher to dictionary\
                            for i in 0...wChr\{\
                                dictionary.append(wBuf[i])\
                            \}\
                            index += 1\
                            \
                            // position in text where need put ref\
                            if index <= text.count-1\{\
                                wBuf.append(text[index])\
                            \}\
                            // remowe all from wBuf when all wBuf added to dictionary\
                            if wChr == wBuf.count-1\{\
                                wBuf.removeAll()\
                            \} else \{ //remowe first el from buf when it added to dict !!!!!!!!!! need insert loop with deleting char from boof when chars count > 1\
//                                wBuf.remove(at: 0)\
//                                wChr = 0\
                                for i in 0...wBuf.count-1-matchlength\{ //???????????\
                                    wBuf.remove(at: 0)\
                                \}\
                            \}\
                        \}\
                    \}\
        \
        \
        \
\
\
                    if wBuf.count == 0\{\
                        print("dictionary")\
\
                        for i in dictionary\{\
                            print(i)\
                        \}\
                        print("wBuf")\
                        for i in wBuf\{\
                            print(i)\
                        \}\
                        break\
                    \}\
                    if dictionary.count >= maxDictCount\{\
                        dictionary.remove(at: 0)\
                    \}\
                    dloop += 1\
                \}\
    \
                    wloop += 1\
            \}\
            \
            tloop += 1\
            print("offset ", offset, " matchlength ", matchlength)\
            \
        \
       \
            \
            if offset != 0 && matchlength > 0\{\
    //                    text[offset] = Character("\\(wChr-1)")\
    //                    text[offset+1] = Character("\\(matchlength)")\
                print(offset)\
                print(matchlength)\
                for t in offset...(offset + matchlength)\{\
                    text[t] = " "\
                \}\
            \}\
        \} */\
        \
//        print(text)\
//        print(dictionary)\
//        print(wBuf)\
        \
//        //
\f1\b MARK: - 2 TRY
\f0\b0 \
//\
//\
//        var index = maxWBufCount + 1\
//\
//        while index < text.count\{\
//\
//            var bufIndex = 0\
//            var dictIndex = 0\
//         //   wBuf.append(text[index])\
//\
//            while bufIndex <= wBuf.count-1\{\
//\
//                print("wBuf ",wBuf)\
//                print("dict ",dictionary)\
//\
//                if wBuf[bufIndex] == dictionary[dictIndex]\{\
//                    offset = index - (wBuf.count-1)\
//                    matchlength += 1\
//                    if bufIndex < wBuf.count-1\{\
//                        bufIndex += 1\
//                    \}\
//                    if dictIndex < dictionary.count-1\{\
//                        dictIndex += 1\
//                    \}\
//\
//                \}\
//\
//                if wBuf[bufIndex] != dictionary[dictIndex] && matchlength == 0\{\
//                    dictionary.append(wBuf[bufIndex])\
//                    wBuf.remove(at: wBuf.startIndex)\
//                    break\
//                \}\
//\
//                if wBuf[bufIndex] != dictionary[dictIndex] && matchlength > 0 || bufIndex >= maxWBufCount\{\
//                    text[offset] = "o"\
//                    //text[index+1] = "l"\
//\
//                    for i in offset...(offset+matchlength)\{\
//                        //text[i] = " "\
//                    \}\
//                    for _ in 0...bufIndex\{\
//                        dictionary.append(wBuf[0])\
//                        wBuf.remove(at: wBuf.startIndex)\
//                    \}\
///
\f2 /                    for 
\f0 _
\f3\i  in 0...bufIndex-1\{
\f0\i0 \
///
\f3\i /                        if (index+bufIndex) 
\f0\i0 < text.endIndex\{\
///
\f3\i /                            wBuf.append(text[index+bufIndex])
\f0\i0 \
///
\f3\i /                        \}
\f0\i0 \
///
\f3\i /                    \}
\f0\i0 \
//\
//                    index += bufIndex-1\
//                    break\
//                \}\
//\
//\
//            \}\
//\
//            index += 1\
//        \}\
//\
        \
        \
        \
        \
        \
        \
        //
\f1\b MARK: - 3 TRY
\f0\b0 \
        \
        \
     /*   var index = maxWBufCount + 1\
        \
        while index < text.count\{\
            \
            var bufIndex = 0\
            var dictIndex = 0\
            wBuf.append(text[index])\
            \
            while bufIndex <= wBuf.count-1\{\
                \
                print("wBuf ",wBuf)\
                print("dict ",dictionary)\
                         \
                if dictionary[dictIndex] == wBuf[0]\{\
                    offset = index - (wBuf.count-1)\
                    \
                    for d in dictionary \{\
                        if wBuf[bufIndex] == d && bufIndex < wBuf.count-1 \{\
                            matchlength += 1\
                            bufIndex += 1\
                        \}\
                    \}\
                    bufIndex -= 1\
                    \
                \} else \{\
                    dictionary.append(wBuf[bufIndex])\
                    wBuf.remove(at: wBuf.startIndex)\
                    break\
                \}\
\
                if wBuf[bufIndex] != dictionary[dictIndex] && matchlength > 0 || bufIndex >= maxWBufCount\{\
                   \
                    \
                    text[offset] = "o"\
//                    text[offset+1] = Character("\\(matchlength)")\
\
                    for i in offset...(offset+matchlength)\{\
                        //text[i] = " "\
                    \}\
                    for _ in 0...bufIndex\{\
                        dictionary.append(wBuf[0])\
                        wBuf.remove(at: wBuf.startIndex)\
                    \}\
                    \
                    for i in 1...bufIndex\{\
                        if (index+i) < text.endIndex\{\
                            wBuf.append(text[index+i])\
                        \}\
                    \}\
\
                    index += bufIndex-1\
                    break\
                \}\
            \}\
\
            index += 1\
        \}\
        \
        print("dct",dictionary)\
        print("buf",wBuf)*/\
        \
        \
        \
\
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0
\cf4 \cb5   
\f1\b \cf6 func
\f0\b0 \cf4  \cf7 compress\cf4 (\cf7 txt\cf4 : [\cf8 Character\cf4 ], \cf7 compressDegree\cf4 : compressDegree) -> [\cf8 Character\cf4 ]\{\
        \
        
\f1\b \cf6 let
\f0\b0 \cf4  maxWBufCount = \cf9 6\cf4 \
        
\f1\b \cf6 var
\f0\b0 \cf4  maxDictCount = \cf9 12\cf4 \
        \
\cf10 //        switch compressDegree \{\cf4 \
\cf10 //        case .speed:\cf4 \
\cf10 //            maxDictCount = 50\cf4 \
\cf10 //        case .mid:\cf4 \
\cf10 //            maxDictCount = 100\cf4 \
\cf10 //        case .perfomance:\cf4 \
\cf10 //            maxDictCount = 150\cf4 \
\cf10 //        \}\cf4 \
        \
        \
        \
        \
        
\f1\b \cf6 var
\f0\b0 \cf4  text = txt\
\cf10 //        var n = 60\cf4 \
\cf10 //        var w = 20 // Nall - nCoded\cf4 \
\cf10 //\cf4 \
\
        \
        \
        
\f1\b \cf6 var
\f0\b0 \cf4  dictionary: [\cf8 Character\cf4 ] = [\cf11 " "\cf4 ]\
        \
        
\f1\b \cf6 var
\f0\b0 \cf4  wBuf: [\cf8 Character\cf4 ] = [\cf11 " "\cf4 ]\
        \
\cf10 //        dictionary.removeAll()\cf4 \
        wBuf.\cf12 removeAll\cf4 ()\
        dictionary[\cf9 0\cf4 ] = text[\cf9 0\cf4 ]\
        \
        \cf10 // fill Wbufer\cf4 \
        
\f1\b \cf6 for
\f0\b0 \cf4  i 
\f1\b \cf6 in
\f0\b0 \cf4  \cf9 1\cf4 ...maxWBufCount \{\
            wBuf.\cf12 append\cf4 (text[i])\
        \}\
        \
\
        \
        \
        \cf10 //
\f1\b \cf13 MARK: - 4 TRY
\f0\b0 \cf4 \
        \
        \
        
\f1\b \cf6 var
\f0\b0 \cf4  index = maxWBufCount + \cf9 1\cf4 \
        
\f1\b \cf6 var
\f0\b0 \cf4  dictIndex = \cf9 0\cf4 \
        
\f1\b \cf6 var
\f0\b0 \cf4  bufIndex = \cf9 0\cf4 \
        \
        
\f1\b \cf6 var
\f0\b0 \cf4  matchlength = \cf9 0\cf4 \
        
\f1\b \cf6 var
\f0\b0 \cf4  offset = \cf9 0\cf4 \
\
        \
        
\f1\b \cf6 while
\f0\b0 \cf4  index < text.\cf12 count\cf4 \{\
            \
            \
            \
 \
            \
            bufIndex = \cf9 0\cf4 \
            dictIndex = \cf9 0\cf4 \
                wBuf.\cf12 append\cf4 (text[index])\
            \
            \
            
\f1\b \cf6 while
\f0\b0 \cf4  bufIndex <= wBuf.\cf12 count\cf4 -\cf9 1\cf4 \{\
                \
                print(\cf11 "wBuf "\cf4 ,wBuf)\
                print(\cf11 "dict "\cf4 ,dictionary)\
                \
                matchlength = \cf9 0\cf4 \
                         \
                
\f1\b \cf6 while
\f0\b0 \cf4  dictIndex < dictionary.\cf12 count\cf4 -\cf9 1\cf4 \{\
                    \
                    
\f1\b \cf6 if
\f0\b0 \cf4  dictionary[dictIndex] == wBuf[bufIndex] && bufIndex <= wBuf.\cf12 count\cf4 -\cf9 1\cf4 \{\
                        offset = index - (wBuf.\cf12 count\cf4 -\cf9 1\cf4 )\
                        matchlength += \cf9 1\cf4 \
                        bufIndex += \cf9 1\cf4 \
                    \}\
                    
\f1\b \cf6 if
\f0\b0 \cf4  bufIndex == wBuf.\cf12 count\cf4  \{ 
\f1\b \cf6 break
\f0\b0 \cf4  \}\
                    
\f1\b \cf6 if
\f0\b0 \cf4  matchlength > \cf9 0\cf4  && wBuf[bufIndex] != dictionary[dictIndex+\cf9 1\cf4 ]\{\
                        
\f1\b \cf6 break
\f0\b0 \cf4 \
                    \}\
                    \
\
                    dictIndex += \cf9 1\cf4 \
                \}\
                \
                
\f1\b \cf6 if
\f0\b0 \cf4  matchlength == \cf9 0\cf4 \{\
                    dictionary.\cf12 append\cf4 (wBuf[\cf9 0\cf4 ])\
                    wBuf.\cf12 remove\cf4 (\cf12 at\cf4 : wBuf.\cf12 startIndex\cf4 )\
                    
\f1\b \cf6 break
\f0\b0 \cf4 \
                \}\
\
                \
                
\f1\b \cf6 if
\f0\b0 \cf4  matchlength > \cf9 0\cf4  && wBuf.\cf12 count\cf4  >= \cf9 1\cf4  \cf10 /* || bufIndex >= maxWBufCount*/\cf4 \{ \cf10 // && \uc0\u1080  \u1076 \u1072 \u1083 \u1100 \u1096 \u1077  \u1084 \u1073  \u1083 \u1080 \u1096 \u1085 \u1077 \u1077 \cf4 \
                   \
                    
\f1\b \cf6 var
\f0\b0 \cf4  i = \cf9 0\cf4 \
                    
\f1\b \cf6 var
\f0\b0 \cf4  j = offset\
                    
\f1\b \cf6 var
\f0\b0 \cf4  countOfReducedChr = offset+matchlength\
                    \
                    
\f1\b \cf6 while
\f0\b0 \cf4  j < countOfReducedChr\{\
                        text[j] = \cf11 " "\cf4 \
                        j += \cf9 1\cf4 \
                    \}\
                    text[offset] = \cf11 "\uc0\u8721 "\cf4 \
\cf10 //                    text[offset+1] = "\'a2"\cf4 \
                    \
                    
\f1\b \cf6 while
\f0\b0 \cf4  i < bufIndex\{\
                        dictionary.\cf12 append\cf4 (wBuf[\cf9 0\cf4 ])\
                        wBuf.\cf12 remove\cf4 (\cf12 at\cf4 : wBuf.\cf12 startIndex\cf4 )\
                        i += \cf9 1\cf4 \
                    \}\
                    \
                    
\f1\b \cf6 var
\f0\b0 \cf4  m = \cf9 0\cf4 \
                    \
                    
\f1\b \cf6 while
\f0\b0 \cf4  m < matchlength-\cf9 1\cf4 \{\
\cf10 //                        if index + m < text.endIndex\{ // \uc0\u1085 \u1077  \u1082 \u1086 \u1076 \u1080 \u1088 \u1091 \u1077 \u1090  \u1087 \u1086 \u1089 \u1083 \u1077 \u1076 \u1085 \u1080 \u1081  \u1089 \u1080 \u1084 \u1074 \u1086 \u1083  \u1089 \u1086 \u1093 \u1088 \u1072 \u1085 \u1103 \u1077 \u1090  \u1077 \u1075 \u1086  \u1074  \u1073 \u1091 \u1092 \u1077 \u1088 \cf4 \
                        
\f1\b \cf6 if
\f0\b0 \cf4  index + \cf9 1\cf4  < text.\cf12 endIndex\cf4 \{ \cf10 // \uc0\u1085 \u1077  \u1086 \u1073 \u1103 \u1079 \u1072 \u1090 \u1077 \u1083 \u1100 \u1085 \u1099 \u1081 \cf4 \
                            print(\cf11 "text "\cf4 , text[index+\cf9 1\cf4 ])\
                            wBuf.\cf12 append\cf4 (text[index+\cf9 1\cf4 ])\
                            index += \cf9 1\cf4 \
                        \}\
                        \
                        m += \cf9 1\cf4 \
                    \}\
                    
\f1\b \cf6 break
\f0\b0 \cf4 \
                \}\
            \}\
            index += \cf9 1\cf4 \
        \}\
\
        matchlength = \cf9 0\cf4 \
        bufIndex = \cf9 0\cf4 \
        index -= wBuf.\cf12 count\cf4 \
        \cf12 print\cf4 (text.\cf12 endIndex\cf4 )\
        \cf12 print\cf4 (index)\
\
        \
        \
        
\f1\b \cf6 while
\f0\b0 \cf4  wBuf.\cf12 count\cf4  > \cf9 0\cf4 \{\
                matchlength = \cf9 0\cf4 \
            \
            dictIndex = \cf9 0\cf4 \
\
        
\f1\b \cf6 while
\f0\b0 \cf4  dictIndex < dictionary.\cf12 count\cf4 \{\
\
            
\f1\b \cf6 if
\f0\b0 \cf4  dictionary[dictIndex] == wBuf[bufIndex] && bufIndex <= wBuf.\cf12 count\cf4 -\cf9 1\cf4 \{\
                offset = index\cf10 // - (wBuf.count-1)\cf4 \
                matchlength += \cf9 1\cf4 \
                bufIndex += \cf9 1\cf4 \
            \}\
            
\f1\b \cf6 if
\f0\b0 \cf4  bufIndex == wBuf.\cf12 count\cf4  || dictIndex == dictionary.\cf12 count\cf4 -\cf9 1\cf4  \{ 
\f1\b \cf6 break
\f0\b0 \cf4  \}\
            
\f1\b \cf6 if
\f0\b0 \cf4  matchlength > \cf9 0\cf4  && wBuf[bufIndex] != dictionary[dictIndex+\cf9 1\cf4 ]\{\
                
\f1\b \cf6 break
\f0\b0 \cf4 \
            \}\
\
\
            dictIndex += \cf9 1\cf4 \
        \}\
\
        
\f1\b \cf6 if
\f0\b0 \cf4  matchlength == \cf9 0\cf4 \{\
            dictionary.\cf12 append\cf4 (wBuf[\cf9 0\cf4 ])\
            wBuf.\cf12 remove\cf4 (\cf12 at\cf4 : wBuf.\cf12 startIndex\cf4 )\
            bufIndex = \cf9 0\cf4 \
            index += \cf9 1\cf4 \
        \}\
\
\
            
\f1\b \cf6 if
\f0\b0 \cf4  matchlength > \cf9 0\cf4  && wBuf.\cf12 count\cf4  >= \cf9 1\cf4  \cf10 /* || bufIndex >= maxWBufCount*/\cf4 \{ \cf10 // && \uc0\u1080  \u1076 \u1072 \u1083 \u1100 \u1096 \u1077  \u1084 \u1073  \u1083 \u1080 \u1096 \u1085 \u1077 \u1077 \cf4 \
\
            
\f1\b \cf6 var
\f0\b0 \cf4  i = \cf9 0\cf4 \
            
\f1\b \cf6 var
\f0\b0 \cf4  j = offset\
            
\f1\b \cf6 let
\f0\b0 \cf4  countOfReducedChr = offset+matchlength\
\
            
\f1\b \cf6 while
\f0\b0 \cf4  j < countOfReducedChr\{\
                text[j] = \cf11 " "\cf4 \
                j += \cf9 1\cf4 \
            \}\
            text[offset] = \cf11 "\uc0\u8721 "\cf4 \
            print(\cf11 "offset"\cf4 , offset)\
\cf10 //                    text[offset+1] = "\'a2"\cf4 \
\
            
\f1\b \cf6 while
\f0\b0 \cf4  i < bufIndex\{\
                dictionary.\cf12 append\cf4 (wBuf[\cf9 0\cf4 ])\
                wBuf.\cf12 remove\cf4 (\cf12 at\cf4 : wBuf.\cf12 startIndex\cf4 )\
                i += \cf9 1\cf4 \
            \}\
            index += i\
            bufIndex = \cf9 0\cf4 \
        \}\
        \}\
        \
        \
        \
        \
        print(\cf11 "dct"\cf4 ,dictionary)\
        print(\cf11 "buf"\cf4 ,wBuf)\
        \cf12 print\cf4 (text.\cf12 endIndex\cf4 )\
        \
        
\f1\b \cf6 return
\f0\b0 \cf4  text\
    \}}